openapi: 3.0.0
info:
  title: Admin Service API
  version: 1.0.0
  description: API to manage admin functionalities for the application

servers:
  - url: https://127.0.0.1:8085
    description: Admin API

tags:
  - name: Admin
    description: Operations related to admin functionality

paths:
  /admin/login:
    post:
      summary: Admin login
      operationId: admin_login
      tags:
        - Admin
      requestBody:
        description: Login credentials
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: '#/components/schemas/TokenResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
              example: 
                response: "Missing Credentials"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
              example: 
                already_logged_in:
                  value:
                    response: "Already logged in"
                invalid_credentials:
                  value:
                    response: "Invalid credentials"

  /admin/logout:
   delete:
     summary: Logout from the system
     operationId: admin_logout
     tags:
       - Admin
     responses:
       '200':
          description: Logout Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
              example:
                response: "Logout Successful"
       '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
              examples:
                already_logged_out:
                  value:
                    response: "Already logged out"
                not_logged:
                  value:
                    response: "You are not logged"

  /admin/users:
   get:
     tags:
       - Admin
     summary: Get all users' accounts
     operationId: users_account
     responses:
       '200':
         description: List of users
         content:
           application/json:
             schema:
               type: array
               items:
                 $ref: '#/components/schemas/UserProfile'
       '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    response:
                      type: string
                examples:
                  Not logged:
                    value:
                      response: "You are not logged"
       '403':
             description: Forbidden
             content:
               application/json:
                 schema:
                   type: object
                   properties:
                     response:
                       type: string
                 examples:
                   Invalid token:
                     value:
                       response: "Invalid Token"
                   Expired token:
                     value:
                       response: "Expired Token"

  /admin/users/{user_uuid}:
   get:
     tags:
       - Admin
     summary: Get details of a specific user
     operationId: user
     parameters:
       - name: user_uuid
         in: path
         required: true
         schema:
           type: string
     responses:
       '200':
         description: User profile details
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/UserProfile'
       '400':
         description: Bad Request
         content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
              examples:
                User not found:
                  value:
                    response: "Error: Player not found"
       '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    response:
                      type: string
                examples:
                  Not logged:
                    value:
                      response: "You are not logged"
       '403':
             description: Forbidden
             content:
               application/json:
                 schema:
                   type: object
                   properties:
                     response:
                       type: string
                 examples:
                   Invalid token:
                     value:
                       response: "Invalid Token"
                   Expired token:
                     value:
                       response: "Expired Token"
   put:
     tags:
       - Admin
     summary: Modify a specific user account
     operationId: user_modify
     parameters:
       - name: user_uuid
         in: path
         required: true
         schema:
           type: string
     requestBody:
       required: true
       content:
         application/json:
           schema:
             $ref: '#/components/schemas/UserProfileMod'
     responses:
       '200':
         description: User profile updated
         content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
              example:
                response: "User updated Successfully!"
       '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    response:
                      type: string
                examples:
                  Not logged:
                    value:
                      response: "You are not logged"
       '403':
             description: Forbidden
             content:
               application/json:
                 schema:
                   type: object
                   properties:
                     response:
                       type: string
                 examples:
                   Invalid token:
                     value:
                       response: "Invalid Token"
                   Expired token:
                     value:
                       response: "Expired Token"
   delete:
     tags:
       - Admin
     summary: Modify a specific user account
     operationId: user_delete_admin
     parameters:
       - name: user_uuid
         in: path
         required: true
         schema:
           type: string
     responses:
       '200':
         description: User profile updated
         content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
              example:
                response: "User eliminated succesfully!"
       '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    response:
                      type: string
                examples:
                  Not logged:
                    value:
                      response: "You are not logged"
       '403':
             description: Forbidden
             content:
               application/json:
                 schema:
                   type: object
                   properties:
                     response:
                       type: string
                 examples:
                   Invalid token:
                     value:
                       response: "Invalid Token"
                   Expired token:
                     value:
                       response: "Expired Token"

  /admin/collection/{user_uuid}:
    get:
      summary: Get user's gacha collection
      operationId: collection
      tags:
        - Admin
      parameters:
        - name: user_uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User's gacha collection
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Gacha'
        '400':
         description: Bad Request
         content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
              examples:
                Image not found:
                  value:
                    response: "gacha image not found"
                Filename not found:
                  value:
                    response: "filename not found"
                invalid image:
                  value:
                    response: "invalid image"
                name, description or rarity missing:
                  value:
                    response: "Missing data"
        '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    response:
                      type: string
                examples:
                  Not logged:
                    value:
                      response: "You are not logged"
        '403':
             description: Forbidden
             content:
               application/json:
                 schema:
                   type: object
                   properties:
                     response:
                       type: string
                 examples:
                   Invalid token:
                     value:
                       response: "Invalid Token"
                   Expired token:
                     value:
                       response: "Expired Token"

  /admin/collection:
   post:
     tags:
       - Admin
     summary: Add a new gacha to the collection
     operationId: add_gacha
     requestBody:
       required: true
       content:
         application/json:
           schema:
             $ref: '#/components/schemas/Gacha'
     responses:
       '200':
         description: Gacha added 
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Gacha'
       '400':
         description: Bad Request
         content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
              examples:
                Image not found:
                  value:
                    response: "gacha image not found"
                Filename not found:
                  value:
                    response: "filename not found"
                invalid image:
                  value:
                    response: "invalid image"
                name, description or rarity missing:
                  value:
                    response: "Missing data"
       '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    response:
                      type: string
                examples:
                  Not logged:
                    value:
                      response: "You are not logged"
       '403':
             description: Forbidden
             content:
               application/json:
                 schema:
                   type: object
                   properties:
                     response:
                       type: string
                 examples:
                   Invalid token:
                     value:
                       response: "Invalid Token"
                   Expired token:
                     value:
                       response: "Expired Token"

  /admin/collection/{gacha_uuid}:
   put:
     tags:
       - Admin
     summary: modify a gacha from the collection
     operationId: modify_gacha
     parameters:
       - name: gacha_uuid
         in: path
         required: true
         schema:
           type: string
     requestBody:
       required: true
       content:
         application/json:
           schema:
             $ref: '#/components/schemas/Gacha'
     responses:
       '200':
         description: Gacha modified 
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Gacha'
       '400':
         description: Bad Request
         content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
              examples:
                Filename not found:
                  value:
                    response: "filename not found"
       '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    response:
                      type: string
                examples:
                  Not logged:
                    value:
                      response: "You are not logged"
       '403':
             description: Forbidden
             content:
               application/json:
                 schema:
                   type: object
                   properties:
                     response:
                       type: string
                 examples:
                   Invalid token:
                     value:
                       response: "Invalid Token"
                   Expired token:
                     value:
                       response: "Expired Token"
   delete:
     tags:
       - Admin
     summary: Delete a gacha from the collection
     operationId: delete_gacha
     parameters:
       - name: gacha_uuid
         in: path
         required: true
         schema:
           type: string
     responses:
       '200':
         description: Gacha deleted
         content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
              example:
                response: "Gacha deleted"
       '400':
         description: Bad Request
         content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
              examples:
                gacha not found:
                  value:
                    response: "gacha uuid not found"
       '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    response:
                      type: string
                examples:
                  Not logged:
                    value:
                      response: "You are not logged"
       '403':
             description: Forbidden
             content:
               application/json:
                 schema:
                   type: object
                   properties:
                     response:
                       type: string
                 examples:
                   Invalid token:
                     value:
                       response: "Invalid Token"
                   Expired token:
                     value:
                       response: "Expired Token"

  /admin/market:
    get:
     summary: View the all the active and close auctions
     operationId: show_all_auction_admin
     tags:
       - Admin
     responses:
       '200':
         description: Auctions market retrieved successfully
         content:
            application/json:
               schema:
                type: array
                items:
                 $ref: '#/components/schemas/Auction'
       '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    response:
                      type: string
                examples:
                  Not logged:
                    value:
                      response: "You are not logged"
       '403':
             description: Forbidden
             content:
               application/json:
                 schema:
                   type: object
                   properties:
                     response:
                       type: string
                 examples:
                   Invalid token:
                     value:
                       response: "Invalid Token"
                   Expired token:
                     value:
                       response: "Expired Token"

  /admin/market/{auction_uuid}:
    get:
     tags:
       - Admin
     summary: Get an open or closed specific auction
     parameters:
       - name: auction_uuid
         in: path
         required: true
         schema:
           type: string
     responses:
       '200':
         description: auction
         content:
           application/json:
             schema:
                 $ref: '#/components/schemas/Auction'
       '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    response:
                      type: string
                examples:
                  Not logged:
                    value:
                      response: "You are not logged"
       '403':
             description: Forbidden
             content:
               application/json:
                 schema:
                   type: object
                   properties:
                     response:
                       type: string
                 examples:
                   Invalid token:
                     value:
                       response: "Invalid Token"
                   Expired token:
                     value:
                       response: "Expired Token"

  /admin/close/{auction_uuid}:
    put:
     summary: Admin can close an auction 
     operationId: close_auction_admin
     tags:
       - Admin
     parameters:
       - name: auction_uuid
         in: path
         required: true
         schema:
           type: string
     responses:
       '200':
         description: Auction closed
         content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
              example:
                response: "Auction closed"
       '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
              examples:
                Auction not found:
                  value:
                    response: "Error: Auction not found"
                Auction closed:
                  value:
                    response: "Auction is already closed"
       '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    response:
                      type: string
                examples:
                  Not logged:
                    value:
                      response: "You are not logged"
       '403':
             description: Forbidden
             content:
               application/json:
                 schema:
                   type: object
                   properties:
                     response:
                       type: string
                 examples:
                   Invalid token:
                     value:
                       response: "Invalid Token"
                   Expired token:
                     value:
                       response: "Expired Token"

  /admin/transactions/{user_uuid}:
    get:
     tags:
       - Admin
     summary: Get transaction history of a specific user (incoming and outgoing)
     operationId: transaction_all_admin
     parameters:
       - name: user_uuid
         in: path
         required: true
         schema:
           type: string
     responses:
       '200':
          description: Success 
          content:
             application/json:
               schema:
                type: object
                properties:
                 response:
                   type: array
                   items:
                    $ref: '#/components/schemas/Transaction'
       '401':
         description: Unauthorized
         content:
           application/json:
             schema:
               type: object
               properties:
                 response:
                   type: string
             examples:
               not_logged:
                 value:
                   response: "You are not logged"
       '403':
         description: Forbidden
         content:
           application/json:
             schema:
               type: object
               properties:
                 response:
                   type: string
             examples:
               invalid_token:
                 value:
                   response: "Invalid Token"
               expired_token:
                 value:
                   response: "Expired Token"

  /admin/payment/{auction_uuid}:
   post:
    summary: Admin can force a payment for an auction 
    operationId: payment_auction_admin
    tags:
      - Admin
    parameters:
      - name: auction_uuid
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: Auction payed
        content:
           application/json:
             schema:
               type: object
               properties:
                 response:
                   type: object
      '400':
         description: Bad Request
         content:
           application/json:
             schema:
               type: object
               properties:
                 response:
                   type: string
             examples:
               Auction not found:
                 value:
                   response: "Error: Auction not found"
               Auction closed:
                 value:
                   response: "Auction is already closed"
               No buyers with money:
                 value:
                   response: "No buyers with sufficient funds"
               No bids: 
                 value:
                   response: "There are no bids for this auction"
      '401':
           description: Unauthorized
           content:
             application/json:
               schema:
                 type: object
                 properties:
                   response:
                     type: string
               examples:
                 Not logged:
                   value:
                     response: "You are not logged"
      '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    response:
                      type: string
                examples:
                  Invalid token:
                    value:
                      response: "Invalid Token"
                  Expired token:
                    value:
                      response: "Expired Token"
                  Cannot be call:
                    value:
                      response: "You're not authorized"

components:
 schemas:
   UserProfile:
     type: object
     description: Player of the game
     properties:
       user_uuid:
         type: string
         description: Unique identifier of the User
       username:
         type: string
         description: Unique nickname of the User
       wallet:
         type: number
         description: In game currency of the User (default 0) 
   UserProfileMod:
     type: object
     description: Player of the game
     properties:
       username:
         type: string
         description: Unique nickname of the User
       wallet:
         type: number
         description: In game currency of the User (default 0) 
   Transaction:
     type: object
     description: A report about the trades for gachas
     properties:
       transaction_uuid:
         type: string
         description: Unique identifier of the transaction
       price:
         type: number
         description: Amount of currency payd for the transaction
       created_at:
         type: string
         description: Date/Time of the creation of the transaction
       uuid_player:
         type: string
         description: Identifier of the player that won the auction
       uuid_auction:
         type: string
         description: Identifier of the auction associated to that transaction
   Gacha:
     type: object
     description: Collectionables of the game
     properties:
       gacha_uuid:
         type: string
         description: Unique identifier of the gacha
       name:
         type: string
         description: Common name of the gacha
       rarity:
         type: string
         description: Rarity of the gacha
       descriptions:
         type: string
         description: Description of the gacha
       image_path:
         type: string
         description: Path of the gacha image
   Auction:
     type: object
     description: A method to exchange gacha in game
     properties:
       auction_uuid:
        type: string
        description: Unique identifier of the auction
       base_price:
        type: number
        description: Starting price of the auction
       gacha_uuid:
        type: string
        description: Identifier of the Gacha subject of the auction
       user_uuid:
        type: string
        description: Identifier of the player that created the auction
       expired_at:
        type: string
        description: Expiration of the auction in Date/Time format
       closed:
        type: string
        description: Status of the auction
   TokenResponse:
       type: object
       description: Oauth2 response token endpoint
       properties:
         access_token:
           type: string
           description: The JWT access token
         expires_in:
           type: integer
           description: The token's expiration time in seconds
         id_token:
           type: string
           description: The JWT ID token
         token_type:
           type: string
           description: The type of token, typically "Bearer"
